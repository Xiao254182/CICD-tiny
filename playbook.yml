---
- hosts: Develop
  remote_user: root

  tasks:
    - name: stop firewalld
      shell: systemctl stop firewalld && systemctl disable firewalld && sed -i "s/SELINUX=enforcing/SELINUX=disabled/g" /etc/selinux/config && setenforce 0
    - name: Change to domestic yum source
      shell: mkdir /etc/yum.repos.d/CentOS_bak && mv /etc/yum.repos.d/CentOS-* /etc/yum.repos.d/CentOS_bak && curl -O http://mirrors.aliyun.com/repo/Centos-7.repo && mv ./Centos-7.repo /etc/yum.repos.d/ && yum clean all && yum makecache fast || echo "ignore"
    - name: stop firewalld
      shell: systemctl stop firewalld && systemctl disable firewalld && setenforce 0
    - name: install epel-* maven npm nodejs net-tools vim wget git java-1.8.0-openjdk-* unzip tomcat mysql
      shell: yum install -y epel-* && yum install -y maven npm nodejs net-tools vim wget git java-1.8.0-openjdk-* unzip tomcat mysql
###############################################################################################################
- hosts: Version
  remote_user: root

  tasks:
    - name: stop firewalld
      shell: systemctl stop firewalld && systemctl disable firewalld && sed -i "s/SELINUX=enforcing/SELINUX=disabled/g" /etc/selinux/config && setenforce 0
    - name: Change to domestic yum source
      shell: mkdir /etc/yum.repos.d/CentOS_bak && mv /etc/yum.repos.d/CentOS-* /etc/yum.repos.d/CentOS_bak && curl -O http://mirrors.aliyun.com/repo/Centos-7.repo && mv ./Centos-7.repo /etc/yum.repos.d/ && yum clean all && yum makecache fast  && yum install -y expect || echo "ignore"
    - name: Move Version_scp.exp to the target host
      copy:
        src: "/root/Version_scp.exp"
        dest: "/root/"
    - name: Change package
      shell: sed -i "s/package/gitlab-ce-16.9.2-ce.0.el7.x86_64.rpm/g" /root/Version_scp.exp || echo "ignore"
    - name: Check if gitlab_rpm file exists
      shell: expect Version_scp.exp || echo "ignore"
    - name: install gitlab-ce-16.9.1
      shell: yum install -y gitlab-ce-16.9.2-ce.0.el7.x86_64.rpm && yum install -y vim epel-* wget || curl -s https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bash && yum install -y gitlab-ce vim epel-* wget
    - name: Configure gitlab and run it
      shell: sed -i "s/http:\/\/gitlab.example.com/http:\/\/{{ ansible_default_ipv4.address }}/g" /etc/gitlab/gitlab.rb && gitlab-ctl reconfigure && gitlab-ctl restart
    - name: install docker
      shell: curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun
    - name: Create Docker Acceleration File
      shell: touch /etc/docker/daemon.json
    - name: Configure Docker Acceleration Source
      blockinfile:
        path: /etc/docker/daemon.json
        block: |
          {
            "registry-mirrors": ["https://registry.docker-cn.com"],
            "insecure-registries": [""{{ ansible_default_ipv4.address }}""]
          }
    - name: Replace double quotes
      shell: sed -i "s/\"\"/\"/g" /etc/docker/daemon.json
    - name: Delete file comments
      shell: sed -i "s/# BEGIN ANSIBLE MANAGED BLOCK/ /g" /etc/docker/daemon.json && sed -i "s/# END ANSIBLE MANAGED BLOCK/ /g" /etc/docker/daemon.json
    - name: start docker-25.0.3
      shell: systemctl enable docker --now
    - name: install docker-compose-1.18.0
      shell: yum install -y docker-compose
    - name: Check if harbor file exists
      shell: sed -i "s/gitlab-ce-16.9.2-ce.0.el7.x86_64.rpm/harbor-offline-installer-v2.5.3.tgz/g" /root/Version_scp.exp && expect Version_scp.exp || echo "ignore"
    - name: install harbor
      shell: tar -xzf /root/harbor-offline-installer-v2.5.3.tgz || wget https://github.com/goharbor/harbor/releases/download/v2.5.3/harbor-offline-installer-v2.5.3.tgz && tar -xzf /root/harbor-offline-installer-v2.5.3.tgz
    - name: Copy Harbor configuration file template
      shell: cp /root/harbor/harbor.yml.tmpl /root/harbor/harbor.yml
    - name: Modify the Harbor configuration file
      shell: "cp /root/harbor/harbor.yml.tmpl /root/harbor/harbor.yml && sed -i 's/reg.mydomain.com/{{ ansible_default_ipv4.address }}/g' /root/harbor/harbor.yml && sed -i 's/port: 80/port: 8081/g' /root/harbor/harbor.yml && sed -i 's/certificate/#certificate/g' /root/harbor/harbor.yml && sed -i 's/private_key/#private_key/g' /root/harbor/harbor.yml && sed -i 's/https:/#https:/g' /root/harbor/harbor.yml && sed -i 's/port: 443/#port: 443/g' /root/harbor/harbor.yml"
    - name: Prepare to start haorbor
      shell: bash /root/harbor/prepare
    - name: start harbor
      shell: bash /root/harbor/install.sh
    - name: install httpd
      shell: yum install -y httpd
    - name: Modify listening port
      shell: sed -i "s/Listen 80/Listen 81/g" /etc/httpd/conf/httpd.conf
    - name: start httpd
      shell: "systemctl restart httpd && systemctl enable httpd"
###############################################################################################################
- hosts: Devops
  remote_user: root

  tasks:
    - name: stop firewalld
      shell: systemctl stop firewalld && systemctl disable firewalld && sed -i "s/SELINUX=enforcing/SELINUX=disabled/g" /etc/selinux/config && setenforce 0
    - name: Change to domestic yum source
      shell: mkdir /etc/yum.repos.d/CentOS_bak && mv /etc/yum.repos.d/CentOS-* /etc/yum.repos.d/CentOS_bak && curl -O http://mirrors.aliyun.com/repo/Centos-7.repo && mv ./Centos-7.repo /etc/yum.repos.d/ && yum clean all && yum makecache fast || echo "ignore"
    - name: install epel-* ansible vim wget tcpdump net-tools unzip git java-1.8.0-openjdk-* pwgen expect
      shell: yum install -y epel-* && yum install -y ansible vim wget tcpdump net-tools unzip git java-1.8.0-openjdk-* pwgen expect
    - name: install docker
      shell: curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun
    - name: Create Docker Acceleration File
      shell: touch /etc/docker/daemon.json
    - name: install docker
      shell: curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun
    - name: Delete file comments
      shell: sed -i "s/# BEGIN ANSIBLE MANAGED BLOCK/ /g" /etc/docker/daemon.json && sed -i "s/# END ANSIBLE MANAGED BLOCK/ /g" /etc/docker/daemon.json
    - name: start docker-25.0.3
      shell: systemctl enable docker --now
    - name: install docker-compose-1.18.0
      shell: yum install -y docker-compose
    - name: Move Devops_scp.exp to the target host
      copy:
        src: "/root/Devops_scp.exp"
        dest: "/root/"
    - name: Change package
      shell: sed -i "s/package/jenkins-2.346.3-1.1.noarch.rpm/g" /root/Devops_scp.exp || echo "ignore"
    - name: Check if Jenkins is installed
      command: rpm -q jenkins
      register: jenkins_installed
      ignore_errors: true
    - name: Download jenkins package if not installed
      get_url:
        url: https://repo.huaweicloud.com/jenkins/redhat-stable/jenkins-2.346.3-1.1.noarch.rpm
        dest: /root/jenkins-2.346.3-1.1.noarch.rpm
      when: jenkins_installed.rc != 0
    - name: Install jenkins package
      yum:
        name: /root/jenkins-2.346.3-1.1.noarch.rpm
        state: present
      when: jenkins_installed.rc != 0
    - name: Switching Users
      shell: sed -i "s/JENKINS_USER="jenkins"/JENKINS_USER="root"/g" /etc/sysconfig/jenkins
    - name: Configure Java path
      shell: sed -i '106i\\/usr\/lib\/jvm\/java' /etc/init.d/jenkins
    - name: start Jenkins
      shell: nohup bash /etc/init.d/jenkins start &
    - name: Create MongoDB YUM source file
      shell: touch /etc/yum.repos.d/mongodb-org.repo
    - name: Configure MongoDB YUM source
      blockinfile:
        path: /etc/yum.repos.d/mongodb-org.repo
        block: |
          [mongodb-org-6.0]
          name=MongoDB Repository
          baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/6.0/x86_64/
          gpgcheck=1
          enabled=1
          gpgkey=https://www.mongodb.org/static/pgp/server-6.0.asc
    - name: install MongoDB
      shell: yum -y install mongodb-org
    - name: start MongoDB
      shell: systemctl daemon-reload && systemctl enable mongod.service && systemctl start mongod.service
    - name: Install Elasticsearch GPG key
      shell: rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch
    - name: Create Elasticsearch YUM source file
      shell: touch /etc/yum.repos.d/elasticsearch.repo
    - name: Configure MongoDB YUM source
      blockinfile:
        path: /etc/yum.repos.d/elasticsearch.repo
        block: |
          [elasticsearch-7.10.2]
          name=Elasticsearch repository for 7.10.2 packages
          baseurl=https://artifacts.elastic.co/packages/oss-7.x/yum
          gpgcheck=1
          gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
          enabled=1
          autorefresh=1
          type=rpm-md
    - name: install elasticsearch-oss
      shell: yum -y install elasticsearch-oss
    - name: Modify Elasticsearch configuration file
      blockinfile:
        path: /etc/elasticsearch/elasticsearch.yml
        block: |
          cluster.name: graylog
          action.auto_create_index: false
    - name: start Elasticsearch
      shell: systemctl daemon-reload && systemctl enable elasticsearch.service && systemctl start elasticsearch.service
    - name: Check if graylog file exists
      shell: sed -i "s/jenkins-2.346.3-1.1.noarch.rpm/graylog-server-5.0.13-1.x86_64.rpm/g" /root/Devops_scp.exp && expect Devops_scp.exp || echo "ignore"
    - name: install graylog
      shell: yum install -y graylog-server-5.0.13-1.x86_64.rpm || yum install -y https://packages.graylog2.org/repo/el/stable/5.0/x86_64/graylog-server-5.0.13-1.x86_64.rpm
    - name: create password_secret.txt
      shell: touch /root/password_secret.txt
    - name: Generate password_secret password
      shell: pwgen -N 1 -s 96 > /root/password_secret.txt
    - name: create root_password_sha2.txt
      shell: touch /root/root_password_sha2.txt
    - name: Generate root_password_sha2 password
      shell: echo -n admin | sha256sum > /root/root_password_sha2.txt
    - name: Enter Graylog configuration file password
      shell: sed -i "s/password_secret =/password_secret = $(awk '{print $1}' /root/password_secret.txt)/g" /etc/graylog/server/server.conf && sed -i "s/root_password_sha2 =/root_password_sha2 = $(awk '{print $1}' /root/root_password_sha2.txt)/g" /etc/graylog/server/server.conf
    - name: start Graylog
      shell: systemctl daemon-reload && systemctl enable graylog-server.service && systemctl start graylog-server.service
###############################################################################################################
- hosts: Produce
  remote_user: root

  tasks:
    - name: stop firewalld
      shell: systemctl stop firewalld && systemctl disable firewalld && sed -i "s/SELINUX=enforcing/SELINUX=disabled/g" /etc/selinux/config && setenforce 0
    - name: Change to domestic yum source
      shell: mkdir /etc/yum.repos.d/CentOS_bak && mv /etc/yum.repos.d/CentOS-* /etc/yum.repos.d/CentOS_bak && curl -O http://mirrors.aliyun.com/repo/Centos-7.repo && mv ./Centos-7.repo /etc/yum.repos.d/ && yum clean all && yum makecache fast || echo "ignore"
    - name: install epel-* nginx mysql-server wget vim
      shell: yum install -y epel-* && yum install -y nginx mysql-server wget vim
    - name: Move monitor.sh to the target host
      copy:
        src: "./monitor.sh"
        dest: "/root/"
    - name: Set scheduled tasks
      shell: (crontab -l ; echo "1 * * * * /root/monitor.sh") | crontab -
